## 数组解构
数组解构时，解构作用在数组内部的位置上，而不是作用在对象的具名属性上，例如：
````ecmascript 6
    let colors = [ "red", "green", "blue" ];
    let [ firstColor, secondColor ] = colors;
    console.log(firstColor); // "red"
    console.log(secondColor); // "green"
````
你也可以在解构模式中忽略一些项，并且只给感兴趣的项提供变量名。例如，若只想获取数
组中的第三个元素，那么不必给前两项提供变量名。以下展示了这种方式：
````ecmascript 6
    let colors = [ "red", "green", "blue" ];
    let [ , , thirdColor ] = colors;
    console.log(thirdColor); // "blue"
````

##### 互换变量值
````ecmascript 6
    // 在 ES6 中互换值
    let a = 1,
        b = 2;
    [ a, b ] = [ b, a ];
    console.log(a); // 2
    console.log(b); // 1
````

##### 剩余项
数组解构有个类似的、名为剩余项（ rest items ）的概念，它使用 ... 语法来将剩余的项目赋值给一个指定的变量，此处有个范例：
````ecmascript 6
    let colors = [ "red", "green", "blue" ];
    let [ firstColor, ...restColors ] = colors;
    console.log(firstColor); // "red"
    console.log(restColors.length); // 2
    console.log(restColors[0]); // "green"
    console.log(restColors[1]); // "blue"
````